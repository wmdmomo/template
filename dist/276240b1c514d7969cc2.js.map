{"version":3,"sources":["webpack:///./src/shared/gtag.js","webpack:///./src/shared/handleError.js","webpack:///./src/services/ivanka.js","webpack:///./src/shared/weixin.js","webpack:///./src/shared/shareMeta.js","webpack:///./src/pages/index/index.js","webpack:///./src/images/logo.png"],"names":["gtag","window","dataLayer","push","arguments","init","trackingId","Date","_callee","e","regeneratorRuntime","wrap","_context","prev","next","code","message","toast","stop","this","api","WscnIvankaAPI","ivankaPlatform","clientType","deviceIdPrefix","cache","onSafeError","_x","_ref","apply","isWeixin","WscnWeixin","wx","weixin","shareMeta","title","desc","imgUrl","img","link","config","then","setShareMeta","module","exports","__webpack_require__","p"],"mappings":"wJAAMA,EAAO,WACXC,OAAOC,UAAUC,KAAKC,YAGxBJ,EAAKK,KAAO,SAAUC,QAA8B,IAA9BA,MAAa,iBACjCL,OAAOC,UAAYD,OAAOC,WAAa,GACvCF,EAAK,KAAM,IAAIO,MACfP,EAAK,SAAUM,IAGFN,2OCRA,SAAAQ,EAAgBC,GAAhB,OAAAC,mBAAAC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACTL,EAAEM,MAAQN,EAAEO,QACdC,IAAMR,EAAEO,QAAS,SAEjBC,IAAM,gCAAiC,SAJ5B,wBAAAL,EAAAM,SAAAV,EAAAW,8MCCf,IAQeC,EARH,IAAIC,IAAc,CAC5BC,eAAgB,gBAChBC,WAAY,OACZC,eAAgB,QAChBC,OAAO,EACPC,YDNa,SAAAC,GAAf,OAAAC,EAAAC,MAAAV,KAAAf,cECY0B,GAAaC,IAAjBC,GAAiBD,IAAbD,UACNG,EAAS,IAAIF,IAAWX,eCAfc,EAAA,CACbC,MAAO,QACPC,KAAM,wBACNC,cAAQC,EACRC,KAASC,gDCOXxC,EAAKK,OAEDyB,GACFG,EACG5B,OACAoC,KAAK,WACJR,EAAOS,aAAaR,gGCrB1BS,EAAAC,QAAiBC,EAAAC,EAAuB","file":"276240b1c514d7969cc2.js","sourcesContent":["const gtag = function () {\n  window.dataLayer.push(arguments)\n}\n\ngtag.init = function (trackingId = 'UA-19303398-2') {\n  window.dataLayer = window.dataLayer || []\n  gtag('js', new Date())\n  gtag('config', trackingId)\n}\n\nexport default gtag\n","import toast from 'wscn-toast'\n\nexport default async function (e) {\n  if (e.code && e.message) {\n    toast(e.message, 'error')\n  } else {\n    toast('发生了一点错误，请稍后再试 .·´¯`(>▂<)´¯`·.', 'error')\n  }\n}\n","import WscnIvankaAPI from 'wscn-ivanka-api'\nimport handleError from '~/shared/handleError'\n\nconst api = new WscnIvankaAPI({\n  ivankaPlatform: 'wscn-platform',\n  clientType: 'mweb',\n  deviceIdPrefix: 'mwscn',\n  cache: true,\n  onSafeError: handleError\n})\n\nexport default api\n","import WscnWeixin from 'wscn-weixin'\nimport api from '~/services/ivanka'\n\nconst { wx, isWeixin } = WscnWeixin\nconst weixin = new WscnWeixin(api)\n\nexport { weixin, wx, isWeixin }\n","import config from '~/config'\n/* eslint-disable import/no-webpack-loader-syntax */\nimport img from '!!file-loader!~/images/logo.png'\n\nexport default {\n  title: 'title',\n  desc: 'blah...blah...blah...',\n  imgUrl: img,\n  link: `${config.BASE_URL}/`\n}\n","import 'normalize.css'\nimport '~/styles/global.css'\nimport '~/styles/mobile-wrapper.css'\nimport './style.css'\n\nimport 'regenerator-runtime/runtime'\n// import ivanka from '~/services/ivanka'\n// import jinshuju from '~/services/jinshuju'\n// import config from '~/config'\n// import auth from '~/shared/auth'\nimport gtag from '~/shared/gtag'\nimport { weixin, isWeixin } from '~/shared/weixin'\nimport shareMeta from '~/shared/shareMeta'\nimport 'wscn-affiliate'\n\ngtag.init()\n\nif (isWeixin) {\n  weixin\n    .init()\n    .then(() => {\n      weixin.setShareMeta(shareMeta)\n    })\n}\n","module.exports = __webpack_public_path__ + \"dbc575e58ea4c2ab691315ff93243d33.png\";"],"sourceRoot":""}